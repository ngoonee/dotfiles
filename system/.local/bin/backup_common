#!/bin/bash

if [ "$(basename $0)" = "backup_common" ]; then
  echo "Please run the backup script using the backup_uni/back_home symlinks"
  exit 1
elif [[ $EUID -ne 0 ]]; then
  echo "You must be a root user" 2>&1
  exit 1
fi

trap "exit" INT

function process_warn {
    if [[ $( pgrep -f $1 ) ]]; then
        echo "$1 should not be running during backup, please exit it now." 2>&1
    fi
}

while ! ping -qc 1 bethsimchatadonai.duckdns.org >/dev/null 2>&1; do
	   let count++
	      [ count -gt 300 ] && exit
	         sleep 1
	 done

function check_browsers {
    # firefox
    process_warn firefox
    # chromium
    process_warn chromium
    # qutebrowser
    process_warn qutebrowser
    # opera
    process_warn opera
    # maxthon
    process_warn maxthon
}

function disable_services {
    systemctl stop dropbox@ngoonee
    systemctl stop nextcloud-client@ngoonee
}

function enable_services {
    systemctl start dropbox@ngoonee
    systemctl start nextcloud-client@ngoonee
}

function backup_envy {
    echo "Backing up Envy to $BORG_REPO at $LOCATION"
    echo "Backing up Envy's /etc to $BORG_REPO at $LOCATION"
    borg create -s -p ::etc-{now:%Y-%m-%d-%H-%M} /etc
    # paclist and pacman -Slq aurrepo to backup list of packages
    for DIR in Dropbox .netrc .fonts; do
        echo "Backing up /home/ngoonee/$DIR to $BORG_REPO at $LOCATION"
        borg create -s -p ::home-$DIR-{now:%Y-%m-%d-%H-%M} /home/ngoonee/$DIR
    done
    echo "Pruning old archives from $BORG_REPO at $LOCATION"
    for PREFIX in etc home-Dropbox home-.netrc home-.fonts; do
        echo "Pruning $PREFIX from $BORG_REPO at $LOCATION"
        borg prune -s --list --keep-within 2d --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1 --prefix $PREFIX
    done
}

function backup_envy_test {
    echo "Testing Backing up Envy to $BORG_REPO at $LOCATION"
    echo "Testing Backing up Envy's /etc to $BORG_REPO at $LOCATION"
    borg create -n --list --filter=AME ::etc-{now:%Y-%m-%d-%H-%M} /etc
    # paclist and pacman -Slq aurrepo to backup list of packages
    for DIR in Dropbox .netrc .fonts; do
        echo "Testing Backing up /home/ngoonee/$DIR to $BORG_REPO at $LOCATION"
        borg create -n --list --filter=AME ::home-$DIR-{now:%Y-%m-%d-%H-%M} /home/ngoonee/$DIR
    done
    echo "Testing Pruning old archives from $BORG_REPO at $LOCATION"
    for PREFIX in etc home-Dropbox home-.netrc home-.fonts; do
        echo "Testing Pruning $PREFIX from $BORG_REPO at $LOCATION"
        borg prune -n -v --list --keep-within 2d --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1 --prefix $PREFIX
    done
}

function backup_desktop {
    echo "Backing up Desktop to $BORG_REPO at $LOCATION"
    echo "Backing up pictures to $BORG_REPO at $LOCATION"
    borg create -s -p ::pictures-{now:%Y-%m-%d-%H-%M} /shared/pictures
    for DIR in Archive dotfiles Files Unsorted; do
        echo "Backing up /home/ngoonee/$DIR to $BORG_REPO at $LOCATION"
        borg create -s -p ::home-$DIR-{now:%Y-%m-%d-%H-%M} /home/ngoonee/$DIR
    done
    echo "Pruning old archives from $BORG_REPO at $LOCATION"
    for PREFIX in pictures home-Archive home-dotfiles home-Files home-Unsorted; do
        echo "Pruning $PREFIX from $BORG_REPO at $LOCATION"
        borg prune -s --list --keep-within 2d --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1 --prefix $PREFIX
    done
    echo "Backing up root to $LOCATION"
    rsync -aAXHv --delete --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found","/home/*","/vm/*","/shared/*"} / home_pi:/mnt/WD3TB/desktop_backup/root
    echo "Backing up ngoonee home folder to $LOCATION"
    rsync -aAXHv --delete --exclude={"Archive","dotfiles","Files","Unsorted",".local/share/Steam",".cache"} /home/ngoonee/ home_pi:/mnt/WD3TB/desktop_backup/home-ngoonee/
    echo "Backing up yongkids home folder to $LOCATION"
    rsync -aAXHv --delete --exclude={".cache",} /home/yongkids/ home_pi:/mnt/WD3TB/desktop_backup/home-yongkids/
}

function backup_desktop_test {
    echo "Testing Backing up Desktop to $BORG_REPO at $LOCATION"
    echo "Testing Backing up pictures to $BORG_REPO at $LOCATION"
    borg create -n --list --filter=AME ::pictures-{now:%Y-%m-%d-%H-%M} /shared/pictures
    for DIR in Archive dotfiles Files Unsorted; do
        echo "Testing Backing up /home/ngoonee/$DIR to $BORG_REPO at $LOCATION"
        borg create -n --list --filter=AME ::home-$DIR-{now:%Y-%m-%d-%H-%M} /home/ngoonee/$DIR
    done
    echo "Testing Pruning old archives from $BORG_REPO at $LOCATION"
    for PREFIX in pictures home-Archive home-dotfiles home-Files home-Unsorted; do
        echo "Testing Pruning $PREFIX from $BORG_REPO at $LOCATION"
        borg prune -n -v --list --keep-within 2d --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1 --prefix $PREFIX
    done
    echo "Testing Backing up root to $LOCATION"
    rsync -n -aAXHv --delete --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found","/home/*","/vm/*","/shared/*"} / home_pi:/mnt/WD3TB/desktop_backup/root
    echo "Testing Backing up ngoonee home folder to $LOCATION"
    rsync -n -aAXHv --delete --exclude={"Archive","dotfiles","Files","Unsorted",".local/share/Steam",".cache"} /home/ngoonee/ home_pi:/mnt/WD3TB/desktop_backup/home-ngoonee/
    echo "Testing Backing up yongkids home folder to $LOCATION"
    rsync -n -aAXHv --delete --exclude={".cache",} /home/yongkids/ home_pi:/mnt/WD3TB/desktop_backup/home-yongkids/
}

#check_browsers
if [ "$(basename $0)" = "backup_home" ]; then
    disable_services
    sleep 1
fi

export BORG_PASSPHRASE=5qmQNoZPravcNjeTp07kbUcS
if [ "$(basename $0)" = "backup_home" ]; then
    export BORG_REPO='home_pi:/mnt/WD3TB/repos/envy'
    export LOCATION='home external drive'
    backup_envy
    #export BORG_REPO='home_laptop:/mnt/borg/repos/envy'
    #export LOCATION='home internal drive'
    #backup_envy
elif [ "$(basename $0)" = "backup_home_test" ]; then
    export BORG_REPO='home_pi:/mnt/WD3TB/repos/envy'
    export LOCATION='home external drive'
    backup_envy_test
    #export BORG_REPO='home_laptop:/mnt/borg/repos/envy'
    #export LOCATION='home internal drive'
    #backup_envy_test
elif [ "$(basename $0)" = "backup_uni" ]; then
    export BORG_REPO='office_pi:/mnt/UNIBACKUP/repos/envy'
    export LOCATION='uni'
    backup_envy
elif [ "$(basename $0)" = "backup_uni_test" ]; then
    export BORG_REPO='office_pi:/mnt/UNIBACKUP/repos/envy'
    export LOCATION='uni'
    backup_envy_test
elif [ "$(basename $0)" = "backup_asus" ]; then
    export BORG_REPO='home_laptop:/mnt/WD3TB/repos/asus'
    echo "Backing up ASUS"
    echo "Backup up bitwarden"
    sudo -u ngoonee sqlite3 /home/ngoonee/bw-data/db.sqlite3 ".backup '/home/ngoonee/bw-data/backup.sqlite3'"
    borg create -s -p ::bitwarden-{now:%Y-%m-%d-%H-%M} /home/ngoonee/bw-data/backup.sqlite3
    echo "Backing up /etc"
    borg create -s -p ::etc-{now:%Y-%m-%d-%H-%M} /etc
    echo "Turn on maintenance mode"
    sudo -u http php /usr/share/webapps/nextcloud/occ maintenance:mode --on
    echo "Syncing the data"
    borg create -s -p ::nextcloud-data-{now:%Y-%m-%d-%H-%M} /var/nextcloud/data
    echo "Syncing the config"
    borg create -s -p ::nextcloud-config-{now:%Y-%m-%d-%H-%M} /etc/webapps/nextcloud/config
    echo "Dumping PostgreSQL"
    pg_dump nextcloud -h localhost -U nextcloud -f /var/nextcloud/nextcloud-dbbackup.bak
    echo "Syncing the SQL backup"
    borg create -s -p ::nextcloud-db-{now:%Y-%m-%d-%H-%M} /var/nextcloud/nextcloud-dbbackup.bak
    echo "Turn off maintenance mode"
    sudo -u http php /usr/share/webapps/nextcloud/occ maintenance:mode --off
    echo "Pruning old archives"
    for PREFIX in etc nextcloud-data nextcloud-config nextcloud-db; do
        echo "Pruning $PREFIX"
        borg prune -s --list --keep-within 2d --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1 --prefix $PREFIX
    done
elif [ "$(basename $0)" = "backup_asus_test" ]; then
    export BORG_REPO='home_laptop:/mnt/WD3TB/repos/asus'
    echo "Testing Backing up ASUS"
    echo "Testing Backing up /etc"
    borg create -n --list --filter=AME ::etc-{now:%Y-%m-%d-%H-%M} /etc
    echo "Turn on maintenance mode"
    sudo -u http php /usr/share/webapps/nextcloud/occ maintenance:mode --on
    echo "Testing Syncing the data"
    borg create -n --list --filter=AME ::nextcloud-data-{now:%Y-%m-%d-%H-%M} /var/nextcloud/data
    echo "Testing Syncing the config"
    borg create -n --list --filter=AME ::nextcloud-config-{now:%Y-%m-%d-%H-%M} /etc/webapps/nextcloud/config
    echo "Dumping PostgreSQL"
    pg_dump nextcloud -h localhost -U nextcloud -f /var/nextcloud/nextcloud-dbbackup.bak
    echo "Testing Syncing the SQL backup"
    borg create -n --list --filter=AME ::nextcloud-db-{now:%Y-%m-%d-%H-%M} /var/nextcloud/nextcloud-dbbackup.bak
    echo "Turn off maintenance mode"
    sudo -u http php /usr/share/webapps/nextcloud/occ maintenance:mode --off
    echo "Testing Pruning old archives"
    for PREFIX in etc nextcloud-data nextcloud-config nextcloud-db; do
        echo "Testing Pruning $PREFIX"
        borg prune -n -v --list --keep-within 2d --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --keep-yearly -1 --prefix $PREFIX
    done
elif [ "$(basename $0)" = "backup_desktop" ]; then
    export BORG_REPO='home_pi:/mnt/WD3TB/repos/desktop'
    export LOCATION='home external drive'
    backup_desktop
elif [ "$(basename $0)" = "backup_desktop_test" ]; then
    export BORG_REPO='home_pi:/mnt/WD3TB/repos/desktop'
    export LOCATION='home external drive'
    backup_desktop_test
else
    echo "Please run the backup script using the appropriate symlinks"
fi

if [ "$(basename $0)" = "backup_home" ]; then
    enable_services
fi

exit 0

sleep 1

if [ "$(basename $0)" = "backup_home" ]; then
  rsync -rlptoD --progress --delete --log-file=/tmp/backuprootlog --modify-window=1 -e 'ssh -p 16484' /etc/ home_laptop_for_backup:/mnt/WD3TB/oonee/etc/
  su ngoonee -c "rsync -rlptoD --exclude-from '/home/ngoonee/.local/conf/excludehome' --progress --delete --log-file=/tmp/backupdatalog --modify-window=1 -e 'ssh -p 16484' /home/ngoonee/ home_laptop_for_backup:/mnt/WD3TB/oonee/ngoonee/"
elif [ "$(basename $0)" = "backup_uni" ]; then
  BASE="192.168.37.88:/mnt/UNIBACKUP"
  BASE="/home/mounts/UniBackup"
  echo "Trying etc"
  #rsync -rlptoD --progress --delete --modify-window=1 /etc/ ${BASE}/etc/
  rsync -rlptoD --no-i-r --info=progress2 --delete --modify-window=1 /etc/ ${BASE}/etc/
  echo "Trying data"
  #su ngoonee -c "rsync -rlptoD --exclude-from '/home/conf/excludedata' --progress --delete --modify-window=1 /home/data/ ${BASE}/data/"
  su ngoonee -c "rsync -rlptoD --exclude-from '/home/conf/excludedata' --no-i-r --info=progress2 --delete --modify-window=1 /home/data/ ${BASE}/data/"
  echo "Trying home"
  #su ngoonee -c "rsync -rlptoD --exclude-from '/home/conf/excludehome' --progress --delete --modify-window=1 /home/ ${BASE}/home/"
  su ngoonee -c "rsync -rlptoD --exclude-from '/home/conf/excludehome' --no-i-r --info=progress2 --delete --modify-window=1 /home/ ${BASE}/home/"
elif [ "$(basename $0)" = "backup_test" ]; then
  echo "Testing settings"
  rsync -nrlptoD --progress --delete --log-file=/tmp/backuprootlog --modify-window=1 -e 'ssh -p 16484' /etc/ home_laptop:/mnt/WD3TB/oonee/etc/
  su ngoonee -c "rsync -nrlptoD --exclude-from '/home/ngoonee/.local/conf/excludehome' --progress  --delete --log-file=/tmp/backupdatalog --modify-window=1 -e 'ssh -p 16484' /home/ngoonee/  home_laptop:/mnt/WD3TB/oonee/ngoonee/"
else
  echo "Please run the backup script using the backup_uni/back_home symlinks"
fi

enable_services
