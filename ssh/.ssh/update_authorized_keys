#!/bin/sh
check_uncommited=`git status --porcelain | grep ssh/\.ssh/ | wc -l`
if [[ $check_uncommited -gt 0 ]]; then
    echo Please commit ssh subdir changes to git first
    exit 0
else
    if [[ -z "$(git log origin/master..master | wc -l)" ]]; then
        echo Can continue, git remote is up to date
    else
        echo Please push committed changes to git first
        exit 0
    fi
fi
if grep -q -f ~/.ssh/personal.pub authorized_keys; then
    # Update routers
    scp -o ConnectTimeout=5 authorized_keys home_router:/home/root/.ssh/authorized_keys
    scp -o ConnectTimeout=5 authorized_keys home_router:/mnt/WD3TB/ssh/authorized_keys
    scp -o ConnectTimeout=5 authorized_keys usj2_router:/home/root/.ssh/authorized_keys
    scp -o ConnectTimeout=5 authorized_keys usj2_router:/mnt/NG3TB/ssh/authorized_keys
    # Update both pis
    ssh -o ConnectTimeout=5 home_pi "cd ~/dotfiles; git pull"
    ssh -o ConnectTimeout=5 tunnel_to_office_pi ". ~/.profile; cd ~/dotfiles; bash -c 'git pull'"
    ssh -o ConnectTimeout=5 office_pi ". ~/.profile; cd ~/dotfiles; bash -c 'git pull'"
    ssh -o ConnectTimeout=5 tunnel_to_home_pi "cd ~/dotfiles; git pull"
fi
if grep -q -f ~/.ssh/work.pub authorized_keys_work; then
    # Update work machines
    scp -o ConnectTimeout=5 authorized_keys_work jks_debian:/home/noe/.ssh/authorized_keys
    scp -o ConnectTimeout=5 authorized_keys_work jks_owncloud:/home/jks/.ssh/authorized_keys
    scp -o ConnectTimeout=5 authorized_keys_work utarinventory:/home/utar/.ssh/authorized_keys
fi
